version: '3.8'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    hostname: "elasticsearch"
    container_name: "elasticsearch"
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    #ports:
    #  - "9200:9200"
    #  - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk
  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    hostname: "kibana"
    container_name: "kibana"
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    #ports:
    #  - "5601:5601"
    networks:
      elk:
        aliases:
          - kibana
    depends_on:
      - elasticsearch

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    hostname: "nginx"
    container_name: "nginx"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - elk
    depends_on: 
      - kibana
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    hostname: certbot
    container_name: certbot
    restart: unless-stopped
    networks:
      - elk
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
